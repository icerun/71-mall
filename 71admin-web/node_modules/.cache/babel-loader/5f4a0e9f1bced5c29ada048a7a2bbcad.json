{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js!D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\components\\Crud\\CRUD.operation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\components\\Crud\\CRUD.operation.vue","mtime":1599936494893},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"D:/myworkspce/myproject/71/71admin-web/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _crud = _interopRequireWildcard(require(\"@crud/crud\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nfunction sortWithRef(src, ref) {\n  var result = Object.assign([], ref);\n  var cursor = -1;\n  src.forEach(function (e) {\n    var idx = result.indexOf(e);\n\n    if (idx === -1) {\n      cursor += 1;\n      result.splice(cursor, 0, e);\n    } else {\n      cursor = idx;\n    }\n  });\n  return result;\n}\n\nvar _default2 = {\n  mixins: [(0, _crud.crud)()],\n  props: {\n    permission: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    hiddenColumns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    ignoreColumns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      tableColumns: [],\n      allColumnsSelected: true,\n      allColumnsSelectedIndeterminate: false,\n      tableUnwatcher: null,\n      // 忽略下次表格列变动\n      ignoreNextTableColumnsChange: false\n    };\n  },\n  watch: {\n    'crud.props.table': function crudPropsTable() {\n      var _this = this;\n\n      this.updateTableColumns();\n      this.tableColumns.forEach(function (column) {\n        if (_this.hiddenColumns.indexOf(column.property) !== -1) {\n          column.visible = false;\n\n          _this.updateColumnVisible(column);\n        }\n      });\n    },\n    'crud.props.table.store.states.columns': function crudPropsTableStoreStatesColumns() {\n      this.updateTableColumns();\n    }\n  },\n  created: function created() {\n    this.crud.updateProp('searchToggle', true);\n  },\n  methods: {\n    updateTableColumns: function updateTableColumns() {\n      var _this2 = this;\n\n      var table = this.crud.getTable();\n\n      if (!table) {\n        this.tableColumns = [];\n        return;\n      }\n\n      var cols = null;\n\n      var columnFilter = function columnFilter(e) {\n        return e && e.type === 'default' && e.property && _this2.ignoreColumns.indexOf(e.property) === -1;\n      };\n\n      var refCols = table.columns.filter(columnFilter);\n\n      if (this.ignoreNextTableColumnsChange) {\n        this.ignoreNextTableColumnsChange = false;\n        return;\n      }\n\n      this.ignoreNextTableColumnsChange = false;\n      var columns = [];\n      var fullTableColumns = table.$children.map(function (e) {\n        return e.columnConfig;\n      }).filter(columnFilter);\n      cols = sortWithRef(fullTableColumns, refCols);\n      cols.forEach(function (config) {\n        var column = {\n          property: config.property,\n          label: config.label,\n          visible: refCols.indexOf(config) !== -1\n        };\n        columns.push(column);\n      });\n      this.tableColumns = columns;\n    },\n    toDelete: function toDelete(datas) {\n      var _this3 = this;\n\n      this.$confirm(\"\\u786E\\u8BA4\\u5220\\u9664\\u9009\\u4E2D\\u7684\".concat(datas.length, \"\\u6761\\u6570\\u636E?\"), '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this3.crud.delAllLoading = true;\n\n        _this3.crud.doDelete(datas);\n      }).catch(function () {});\n    },\n    handleCheckAllChange: function handleCheckAllChange(val) {\n      var _this4 = this;\n\n      if (val === false) {\n        this.allColumnsSelected = true;\n        return;\n      }\n\n      this.tableColumns.forEach(function (column) {\n        if (!column.visible) {\n          column.visible = true;\n\n          _this4.updateColumnVisible(column);\n        }\n      });\n      this.allColumnsSelected = val;\n      this.allColumnsSelectedIndeterminate = false;\n    },\n    handleCheckedTableColumnsChange: function handleCheckedTableColumnsChange(item) {\n      var totalCount = 0;\n      var selectedCount = 0;\n      this.tableColumns.forEach(function (column) {\n        ++totalCount;\n        selectedCount += column.visible ? 1 : 0;\n      });\n\n      if (selectedCount === 0) {\n        this.crud.notify('请至少选择一列', _crud.default.NOTIFICATION_TYPE.WARNING);\n        this.$nextTick(function () {\n          item.visible = true;\n        });\n        return;\n      }\n\n      this.allColumnsSelected = selectedCount === totalCount;\n      this.allColumnsSelectedIndeterminate = selectedCount !== totalCount && selectedCount !== 0;\n      this.updateColumnVisible(item);\n    },\n    updateColumnVisible: function updateColumnVisible(item) {\n      var table = this.crud.props.table;\n      var vm = table.$children.find(function (e) {\n        return e.prop === item.property;\n      });\n      var columnConfig = vm.columnConfig;\n\n      if (item.visible) {\n        // 找出合适的插入点\n        var columnIndex = this.tableColumns.indexOf(item);\n        vm.owner.store.commit('insertColumn', columnConfig, columnIndex + 1, null);\n      } else {\n        vm.owner.store.commit('removeColumn', columnConfig, null);\n      }\n\n      this.ignoreNextTableColumnsChange = true;\n    },\n    toggleSearch: function toggleSearch() {\n      this.crud.props.searchToggle = !this.crud.props.searchToggle;\n    }\n  }\n};\nexports.default = _default2;",null]}