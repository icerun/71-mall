{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js!D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\tools\\storage\\local\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\tools\\storage\\local\\index.vue","mtime":1599936494945},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"D:/myworkspce/myproject/71/71admin-web/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"D:/myworkspce/myproject/71/71admin-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/myworkspce/myproject/71/71admin-web/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _localStorage = _interopRequireDefault(require(\"@/api/tools/localStorage\"));\n\nvar _crud = _interopRequireWildcard(require(\"@crud/crud\"));\n\nvar _RR = _interopRequireDefault(require(\"@crud/RR.operation\"));\n\nvar _CRUD = _interopRequireDefault(require(\"@crud/CRUD.operation\"));\n\nvar _Pagination = _interopRequireDefault(require(\"@crud/Pagination\"));\n\nvar _DateRangePicker = _interopRequireDefault(require(\"@/components/DateRangePicker\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar defaultForm = {\n  id: null,\n  name: ''\n};\nvar _default = {\n  components: {\n    pagination: _Pagination.default,\n    crudOperation: _CRUD.default,\n    rrOperation: _RR.default,\n    DateRangePicker: _DateRangePicker.default\n  },\n  cruds: function cruds() {\n    return (0, _crud.default)({\n      title: '文件',\n      url: 'api/localStorage',\n      crudMethod: (0, _objectSpread2.default)({}, _localStorage.default)\n    });\n  },\n  mixins: [(0, _crud.presenter)(), (0, _crud.header)(), (0, _crud.form)(defaultForm), (0, _crud.crud)()],\n  data: function data() {\n    return {\n      delAllLoading: false,\n      loading: false,\n      headers: {\n        'Authorization': (0, _auth.getToken)()\n      },\n      permission: {\n        edit: ['admin', 'storage:edit'],\n        del: ['admin', 'storage:del']\n      }\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['baseApi', 'fileUploadApi'])),\n  created: function created() {\n    this.crud.optShow.add = false;\n  },\n  methods: {\n    // 上传文件\n    upload: function upload() {\n      this.$refs.upload.submit();\n    },\n    beforeUpload: function beforeUpload(file) {\n      var isLt2M = true;\n      isLt2M = file.size / 1024 / 1024 < 100;\n\n      if (!isLt2M) {\n        this.loading = false;\n        this.$message.error('上传文件大小不能超过 100MB!');\n      }\n\n      this.form.name = file.name;\n      return isLt2M;\n    },\n    handleSuccess: function handleSuccess(response, file, fileList) {\n      this.crud.notify('上传成功', _crud.default.NOTIFICATION_TYPE.SUCCESS);\n      this.$refs.upload.clearFiles();\n      this.crud.status.add = _crud.default.STATUS.NORMAL;\n      this.crud.resetForm();\n      this.crud.toQuery();\n    },\n    // 监听上传失败\n    handleError: function handleError(e, file, fileList) {\n      var msg = JSON.parse(e.message);\n      this.$notify({\n        title: msg.message,\n        type: 'error',\n        duration: 2500\n      });\n      this.loading = false;\n    }\n  }\n};\nexports.default = _default;",null]}