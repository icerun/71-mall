{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\system\\dept\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\system\\dept\\index.vue","mtime":1599936494936},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudDept from '@/api/system/dept'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nimport { LOAD_CHILDREN_OPTIONS } from '@riophae/vue-treeselect'\r\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport udOperation from '@crud/UD.operation'\r\nimport DateRangePicker from '@/components/DateRangePicker'\r\n\r\nconst defaultForm = { id: null, name: null, isTop: '1', subCount: 0, pid: null, deptSort: 999, enabled: 'true' }\r\nexport default {\r\n  name: 'Dept',\r\n  components: { Treeselect, crudOperation, rrOperation, udOperation, DateRangePicker },\r\n  cruds() {\r\n    return CRUD({ title: '部门', url: 'api/dept', crudMethod: { ...crudDept }})\r\n  },\r\n  mixins: [presenter(), header(), form(defaultForm), crud()],\r\n  // 设置数据字典\r\n  dicts: ['dept_status'],\r\n  data() {\r\n    return {\r\n      depts: [],\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入名称', trigger: 'blur' }\r\n        ],\r\n        deptSort: [\r\n          { required: true, message: '请输入序号', trigger: 'blur', type: 'number' }\r\n        ]\r\n      },\r\n      permission: {\r\n        add: ['admin', 'dept:add'],\r\n        edit: ['admin', 'dept:edit'],\r\n        del: ['admin', 'dept:del']\r\n      },\r\n      enabledTypeOptions: [\r\n        { key: 'true', display_name: '正常' },\r\n        { key: 'false', display_name: '禁用' }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    getDeptDatas(tree, treeNode, resolve) {\r\n      const params = { pid: tree.id }\r\n      setTimeout(() => {\r\n        crudDept.getDepts(params).then(res => {\r\n          resolve(res.content)\r\n        })\r\n      }, 100)\r\n    },\r\n    // 新增与编辑前做的操作\r\n    [CRUD.HOOK.afterToCU](crud, form) {\r\n      if (form.pid !== null) {\r\n        form.isTop = '0'\r\n      } else if (form.id !== null) {\r\n        form.isTop = '1'\r\n      }\r\n      form.enabled = `${form.enabled}`\r\n      if (form.id != null) {\r\n        this.getSupDepts(form.id)\r\n      } else {\r\n        this.getDepts()\r\n      }\r\n    },\r\n    getSupDepts(id) {\r\n      crudDept.getDeptSuperior(id).then(res => {\r\n        const date = res.content\r\n        this.buildDepts(date)\r\n        this.depts = date\r\n      })\r\n    },\r\n    buildDepts(depts) {\r\n      depts.forEach(data => {\r\n        if (data.children) {\r\n          this.buildDepts(data.children)\r\n        }\r\n        if (data.hasChildren && !data.children) {\r\n          data.children = null\r\n        }\r\n      })\r\n    },\r\n    getDepts() {\r\n      crudDept.getDepts({ enabled: true }).then(res => {\r\n        this.depts = res.content.map(function(obj) {\r\n          if (obj.hasChildren) {\r\n            obj.children = null\r\n          }\r\n          return obj\r\n        })\r\n      })\r\n    },\r\n    // 获取弹窗内部门数据\r\n    loadDepts({ action, parentNode, callback }) {\r\n      if (action === LOAD_CHILDREN_OPTIONS) {\r\n        crudDept.getDepts({ enabled: true, pid: parentNode.id }).then(res => {\r\n          parentNode.children = res.content.map(function(obj) {\r\n            if (obj.hasChildren) {\r\n              obj.children = null\r\n            }\r\n            return obj\r\n          })\r\n          setTimeout(() => {\r\n            callback()\r\n          }, 100)\r\n        })\r\n      }\r\n    },\r\n    // 提交前的验证\r\n    [CRUD.HOOK.afterValidateCU]() {\r\n      if (this.form.pid !== null && this.form.pid === this.form.id) {\r\n        this.$message({\r\n          message: '上级部门不能为空',\r\n          type: 'warning'\r\n        })\r\n        return false\r\n      }\r\n      if (this.form.isTop === '1') {\r\n        this.form.pid = null\r\n      }\r\n      return true\r\n    },\r\n    // 改变状态\r\n    changeEnabled(data, val) {\r\n      this.$confirm('此操作将 \"' + this.dict.label.dept_status[val] + '\" ' + data.name + '部门, 是否继续？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        crudDept.edit(data).then(res => {\r\n          this.crud.notify(this.dict.label.dept_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n        }).catch(err => {\r\n          data.enabled = !data.enabled\r\n          console.log(err.response.data.message)\r\n        })\r\n      }).catch(() => {\r\n        data.enabled = !data.enabled\r\n      })\r\n    },\r\n    checkboxT(row, rowIndex) {\r\n      return row.id !== 1\r\n    }\r\n  }\r\n}\r\n",null]}