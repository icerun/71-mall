{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\monitor\\server\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\monitor\\server\\index.vue","mtime":1599936494933},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport ECharts from 'vue-echarts'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/polar'\r\nimport { initData } from '@/api/data'\r\nexport default {\r\n  name: 'ServerMonitor',\r\n  components: {\r\n    'v-chart': ECharts\r\n  },\r\n  data() {\r\n    return {\r\n      show: false,\r\n      monitor: null,\r\n      url: 'api/monitor',\r\n      data: {},\r\n      cpuInfo: {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          min: 0,\r\n          max: 100,\r\n          interval: 20\r\n        },\r\n        series: [{\r\n          data: [],\r\n          type: 'line',\r\n          areaStyle: {\r\n            normal: {\r\n              color: 'rgb(32, 160, 255)' // 改变区域颜色\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#6fbae1',\r\n              lineStyle: {\r\n                color: '#6fbae1' // 改变折线颜色\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      },\r\n      memoryInfo: {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          min: 0,\r\n          max: 100,\r\n          interval: 20\r\n        },\r\n        series: [{\r\n          data: [],\r\n          type: 'line',\r\n          areaStyle: {\r\n            normal: {\r\n              color: 'rgb(32, 160, 255)' // 改变区域颜色\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#6fbae1',\r\n              lineStyle: {\r\n                color: '#6fbae1' // 改变折线颜色\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n    this.monitor = window.setInterval(() => {\r\n      setTimeout(() => {\r\n        this.init()\r\n      }, 2)\r\n    }, 3500)\r\n  },\r\n  destroyed() {\r\n    clearInterval(this.monitor)\r\n  },\r\n  methods: {\r\n    init() {\r\n      initData(this.url, {}).then(data => {\r\n        this.data = data\r\n        this.show = true\r\n        if (this.cpuInfo.xAxis.data.length >= 8) {\r\n          this.cpuInfo.xAxis.data.shift()\r\n          this.memoryInfo.xAxis.data.shift()\r\n          this.cpuInfo.series[0].data.shift()\r\n          this.memoryInfo.series[0].data.shift()\r\n        }\r\n        this.cpuInfo.xAxis.data.push(data.time)\r\n        this.memoryInfo.xAxis.data.push(data.time)\r\n        this.cpuInfo.series[0].data.push(parseFloat(data.memory.used))\r\n        this.memoryInfo.series[0].data.push(parseFloat(data.memory.usageRate))\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}