{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\components\\Crud\\CRUD.operation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\components\\Crud\\CRUD.operation.vue","mtime":1599936494893},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport CRUD, { crud } from '@crud/crud'\r\n\r\nfunction sortWithRef(src, ref) {\r\n  const result = Object.assign([], ref)\r\n  let cursor = -1\r\n  src.forEach(e => {\r\n    const idx = result.indexOf(e)\r\n    if (idx === -1) {\r\n      cursor += 1\r\n      result.splice(cursor, 0, e)\r\n    } else {\r\n      cursor = idx\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\nexport default {\r\n  mixins: [crud()],\r\n  props: {\r\n    permission: {\r\n      type: Object,\r\n      default: () => { return {} }\r\n    },\r\n    hiddenColumns: {\r\n      type: Array,\r\n      default: () => { return [] }\r\n    },\r\n    ignoreColumns: {\r\n      type: Array,\r\n      default: () => { return [] }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      tableColumns: [],\r\n      allColumnsSelected: true,\r\n      allColumnsSelectedIndeterminate: false,\r\n      tableUnwatcher: null,\r\n      // 忽略下次表格列变动\r\n      ignoreNextTableColumnsChange: false\r\n    }\r\n  },\r\n  watch: {\r\n    'crud.props.table'() {\r\n      this.updateTableColumns()\r\n      this.tableColumns.forEach(column => {\r\n        if (this.hiddenColumns.indexOf(column.property) !== -1) {\r\n          column.visible = false\r\n          this.updateColumnVisible(column)\r\n        }\r\n      })\r\n    },\r\n    'crud.props.table.store.states.columns'() {\r\n      this.updateTableColumns()\r\n    }\r\n  },\r\n  created() {\r\n    this.crud.updateProp('searchToggle', true)\r\n  },\r\n  methods: {\r\n    updateTableColumns() {\r\n      const table = this.crud.getTable()\r\n      if (!table) {\r\n        this.tableColumns = []\r\n        return\r\n      }\r\n      let cols = null\r\n      const columnFilter = e => e && e.type === 'default' && e.property && this.ignoreColumns.indexOf(e.property) === -1\r\n      const refCols = table.columns.filter(columnFilter)\r\n      if (this.ignoreNextTableColumnsChange) {\r\n        this.ignoreNextTableColumnsChange = false\r\n        return\r\n      }\r\n      this.ignoreNextTableColumnsChange = false\r\n      const columns = []\r\n      const fullTableColumns = table.$children.map(e => e.columnConfig).filter(columnFilter)\r\n      cols = sortWithRef(fullTableColumns, refCols)\r\n      cols.forEach(config => {\r\n        const column = {\r\n          property: config.property,\r\n          label: config.label,\r\n          visible: refCols.indexOf(config) !== -1\r\n        }\r\n        columns.push(column)\r\n      })\r\n      this.tableColumns = columns\r\n    },\r\n    toDelete(datas) {\r\n      this.$confirm(`确认删除选中的${datas.length}条数据?`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.crud.delAllLoading = true\r\n        this.crud.doDelete(datas)\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleCheckAllChange(val) {\r\n      if (val === false) {\r\n        this.allColumnsSelected = true\r\n        return\r\n      }\r\n      this.tableColumns.forEach(column => {\r\n        if (!column.visible) {\r\n          column.visible = true\r\n          this.updateColumnVisible(column)\r\n        }\r\n      })\r\n      this.allColumnsSelected = val\r\n      this.allColumnsSelectedIndeterminate = false\r\n    },\r\n    handleCheckedTableColumnsChange(item) {\r\n      let totalCount = 0\r\n      let selectedCount = 0\r\n      this.tableColumns.forEach(column => {\r\n        ++totalCount\r\n        selectedCount += column.visible ? 1 : 0\r\n      })\r\n      if (selectedCount === 0) {\r\n        this.crud.notify('请至少选择一列', CRUD.NOTIFICATION_TYPE.WARNING)\r\n        this.$nextTick(function() {\r\n          item.visible = true\r\n        })\r\n        return\r\n      }\r\n      this.allColumnsSelected = selectedCount === totalCount\r\n      this.allColumnsSelectedIndeterminate = selectedCount !== totalCount && selectedCount !== 0\r\n      this.updateColumnVisible(item)\r\n    },\r\n    updateColumnVisible(item) {\r\n      const table = this.crud.props.table\r\n      const vm = table.$children.find(e => e.prop === item.property)\r\n      const columnConfig = vm.columnConfig\r\n      if (item.visible) {\r\n        // 找出合适的插入点\r\n        const columnIndex = this.tableColumns.indexOf(item)\r\n        vm.owner.store.commit('insertColumn', columnConfig, columnIndex + 1, null)\r\n      } else {\r\n        vm.owner.store.commit('removeColumn', columnConfig, null)\r\n      }\r\n      this.ignoreNextTableColumnsChange = true\r\n    },\r\n    toggleSearch() {\r\n      this.crud.props.searchToggle = !this.crud.props.searchToggle\r\n    }\r\n  }\r\n}\r\n",null]}