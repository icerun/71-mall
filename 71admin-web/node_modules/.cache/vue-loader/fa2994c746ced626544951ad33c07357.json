{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\mnt\\server\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\mnt\\server\\index.vue","mtime":1599936494931},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport crudServer from '@/api/mnt/serverDeploy'\r\nimport { testServerConnect } from '@/api/mnt/connect'\r\nimport { validateIP } from '@/utils/validate'\r\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport udOperation from '@crud/UD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport DateRangePicker from '@/components/DateRangePicker'\r\n\r\nconst defaultForm = { id: null, name: null, ip: null, port: 22, account: 'root', password: null }\r\nexport default {\r\n  name: 'Server',\r\n  components: { pagination, crudOperation, rrOperation, udOperation, DateRangePicker },\r\n  cruds() {\r\n    return CRUD({ title: '服务器', url: 'api/serverDeploy', crudMethod: { ...crudServer }})\r\n  },\r\n  mixins: [presenter(), header(), form(defaultForm), crud()],\r\n  data() {\r\n    return {\r\n      accountList: [],\r\n      accountMap: {},\r\n      loading: false,\r\n      permission: {\r\n        add: ['admin', 'serverDeploy:add'],\r\n        edit: ['admin', 'serverDeploy:edit'],\r\n        del: ['admin', 'serverDeploy:del']\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入名称', trigger: 'blur' }\r\n        ],\r\n        ip: [\r\n          { required: true, message: '请输入IP', trigger: 'blur' },\r\n          { validator: validateIP, trigger: 'change' }\r\n        ],\r\n        port: [\r\n          { required: true, message: '请输入端口', trigger: 'blur', type: 'number' }\r\n        ],\r\n        account: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    testConnectServer() {\r\n      this.$refs['form'].validate((valid) => {\r\n        if (valid) {\r\n          this.loading = true\r\n          testServerConnect(this.form).then((res) => {\r\n            this.loading = false\r\n            this.$notify({\r\n              title: res ? '连接成功' : '连接失败',\r\n              type: res ? 'success' : 'error',\r\n              duration: 2500\r\n            })\r\n          }).catch(() => {\r\n            this.loading = false\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}