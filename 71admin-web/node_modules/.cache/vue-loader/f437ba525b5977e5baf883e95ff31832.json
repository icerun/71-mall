{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\system\\timing\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\system\\timing\\index.vue","mtime":1599936494940},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudJob from '@/api/system/timing'\r\nimport Log from './log'\r\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport DateRangePicker from '@/components/DateRangePicker'\r\n\r\nconst defaultForm = { id: null, jobName: null, subTask: null, beanName: null, methodName: null, params: null, cronExpression: null, pauseAfterFailure: true, isPause: false, personInCharge: null, email: null, description: null }\r\nexport default {\r\n  name: 'Timing',\r\n  components: { Log, pagination, crudOperation, rrOperation, DateRangePicker },\r\n  cruds() {\r\n    return CRUD({ title: '定时任务', url: 'api/jobs', crudMethod: { ...crudJob }})\r\n  },\r\n  mixins: [presenter(), header(), form(defaultForm), crud()],\r\n  data() {\r\n    return {\r\n      delLoading: false,\r\n      permission: {\r\n        add: ['admin', 'timing:add'],\r\n        edit: ['admin', 'timing:edit'],\r\n        del: ['admin', 'timing:del']\r\n      },\r\n      rules: {\r\n        jobName: [\r\n          { required: true, message: '请输入任务名称', trigger: 'blur' }\r\n        ],\r\n        description: [\r\n          { required: true, message: '请输入任务描述', trigger: 'blur' }\r\n        ],\r\n        beanName: [\r\n          { required: true, message: '请输入Bean名称', trigger: 'blur' }\r\n        ],\r\n        methodName: [\r\n          { required: true, message: '请输入方法名称', trigger: 'blur' }\r\n        ],\r\n        cronExpression: [\r\n          { required: true, message: '请输入Cron表达式', trigger: 'blur' }\r\n        ],\r\n        personInCharge: [\r\n          { required: true, message: '请输入负责人名称', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 执行\r\n    execute(id) {\r\n      crudJob.execution(id).then(res => {\r\n        this.crud.notify('执行成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n      }).catch(err => {\r\n        console.log(err.response.data.message)\r\n      })\r\n    },\r\n    // 改变状态\r\n    updateStatus(id, status) {\r\n      if (status === '恢复') {\r\n        this.updateParams(id)\r\n      }\r\n      crudJob.updateIsPause(id).then(res => {\r\n        this.crud.toQuery()\r\n        this.crud.notify(status + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n      }).catch(err => {\r\n        console.log(err.response.data.message)\r\n      })\r\n    },\r\n    updateParams(id) {\r\n      console.log(id)\r\n    },\r\n    delMethod(id) {\r\n      this.delLoading = true\r\n      crudJob.del([id]).then(() => {\r\n        this.delLoading = false\r\n        this.$refs[id].doClose()\r\n        this.crud.dleChangePage(1)\r\n        this.crud.delSuccessNotify()\r\n        this.crud.toQuery()\r\n      }).catch(() => {\r\n        this.delLoading = false\r\n        this.$refs[id].doClose()\r\n      })\r\n    },\r\n    // 显示日志\r\n    doLog() {\r\n      this.$refs.log.dialog = true\r\n      this.$refs.log.doInit()\r\n    },\r\n    checkboxT(row, rowIndex) {\r\n      return row.id !== 1\r\n    }\r\n  }\r\n}\r\n",null]}