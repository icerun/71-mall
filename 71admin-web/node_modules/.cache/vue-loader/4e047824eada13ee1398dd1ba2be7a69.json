{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\generator\\config.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\generator\\config.vue","mtime":1599936494926},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crud from '@/mixins/crud'\r\nimport { update, get } from '@/api/generator/genConfig'\r\nimport { save, sync, generator } from '@/api/generator/generator'\r\nimport { getDicts } from '@/api/system/dict'\r\nexport default {\r\n  name: 'GeneratorConfig',\r\n  components: {},\r\n  mixins: [crud],\r\n  data() {\r\n    return {\r\n      activeName: 'first', tableName: '', tableHeight: 550, columnLoading: false, configLoading: false, dicts: [], syncLoading: false, genLoading: false,\r\n      form: { id: null, tableName: '', author: '', pack: '', path: '', moduleName: '', cover: 'false', apiPath: '', prefix: '', apiAlias: null },\r\n      rules: {\r\n        author: [\r\n          { required: true, message: '作者不能为空', trigger: 'blur' }\r\n        ],\r\n        pack: [\r\n          { required: true, message: '包路径不能为空', trigger: 'blur' }\r\n        ],\r\n        moduleName: [\r\n          { required: true, message: '包路径不能为空', trigger: 'blur' }\r\n        ],\r\n        path: [\r\n          { required: true, message: '前端路径不能为空', trigger: 'blur' }\r\n        ],\r\n        apiAlias: [\r\n          { required: true, message: '接口名称不能为空', trigger: 'blur' }\r\n        ],\r\n        cover: [\r\n          { required: true, message: '不能为空', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.tableHeight = document.documentElement.clientHeight - 385\r\n    this.tableName = this.$route.params.tableName\r\n    this.$nextTick(() => {\r\n      this.init()\r\n      get(this.tableName).then(data => {\r\n        this.form = data\r\n        this.form.cover = this.form.cover.toString()\r\n      })\r\n      getDicts().then(data => {\r\n        this.dicts = data\r\n      })\r\n    })\r\n  },\r\n  methods: {\r\n    beforeInit() {\r\n      this.url = 'api/generator/columns'\r\n      const tableName = this.tableName\r\n      this.params = { tableName }\r\n      return true\r\n    },\r\n    saveColumnConfig() {\r\n      this.columnLoading = true\r\n      save(this.data).then(res => {\r\n        this.notify('保存成功', 'success')\r\n        this.columnLoading = false\r\n      }).catch(err => {\r\n        this.columnLoading = false\r\n        console.log(err.response.data.message)\r\n      })\r\n    },\r\n    doSubmit() {\r\n      this.$refs['form'].validate((valid) => {\r\n        if (valid) {\r\n          this.configLoading = true\r\n          update(this.form).then(res => {\r\n            this.notify('保存成功', 'success')\r\n            this.form = res\r\n            this.form.cover = this.form.cover.toString()\r\n            this.configLoading = false\r\n          }).catch(err => {\r\n            this.configLoading = false\r\n            console.log(err.response.data.message)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    sync() {\r\n      this.syncLoading = true\r\n      sync([this.tableName]).then(() => {\r\n        this.init()\r\n        this.notify('同步成功', 'success')\r\n        this.syncLoading = false\r\n      }).then(() => {\r\n        this.syncLoading = false\r\n      })\r\n    },\r\n    toGen() {\r\n      this.genLoading = true\r\n      save(this.data).then(res => {\r\n        this.notify('保存成功', 'success')\r\n        // 生成代码\r\n        generator(this.tableName, 0).then(data => {\r\n          this.genLoading = false\r\n          this.notify('生成成功', 'success')\r\n        }).catch(err => {\r\n          this.genLoading = false\r\n          console.log(err.response.data.message)\r\n        })\r\n      }).catch(err => {\r\n        this.genLoading = false\r\n        console.log(err.response.data.message)\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}