{"remainingRequest":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\tools\\storage\\local\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\src\\views\\tools\\storage\\local\\index.vue","mtime":1599936494945},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myworkspce\\myproject\\71\\71admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport { getToken } from '@/utils/auth'\r\nimport crudFile from '@/api/tools/localStorage'\r\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport DateRangePicker from '@/components/DateRangePicker'\r\n\r\nconst defaultForm = { id: null, name: '' }\r\nexport default {\r\n  components: { pagination, crudOperation, rrOperation, DateRangePicker },\r\n  cruds() {\r\n    return CRUD({ title: '文件', url: 'api/localStorage', crudMethod: { ...crudFile }})\r\n  },\r\n  mixins: [presenter(), header(), form(defaultForm), crud()],\r\n  data() {\r\n    return {\r\n      delAllLoading: false,\r\n      loading: false,\r\n      headers: { 'Authorization': getToken() },\r\n      permission: {\r\n        edit: ['admin', 'storage:edit'],\r\n        del: ['admin', 'storage:del']\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'baseApi',\r\n      'fileUploadApi'\r\n    ])\r\n  },\r\n  created() {\r\n    this.crud.optShow.add = false\r\n  },\r\n  methods: {\r\n    // 上传文件\r\n    upload() {\r\n      this.$refs.upload.submit()\r\n    },\r\n    beforeUpload(file) {\r\n      let isLt2M = true\r\n      isLt2M = file.size / 1024 / 1024 < 100\r\n      if (!isLt2M) {\r\n        this.loading = false\r\n        this.$message.error('上传文件大小不能超过 100MB!')\r\n      }\r\n      this.form.name = file.name\r\n      return isLt2M\r\n    },\r\n    handleSuccess(response, file, fileList) {\r\n      this.crud.notify('上传成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n      this.$refs.upload.clearFiles()\r\n      this.crud.status.add = CRUD.STATUS.NORMAL\r\n      this.crud.resetForm()\r\n      this.crud.toQuery()\r\n    },\r\n    // 监听上传失败\r\n    handleError(e, file, fileList) {\r\n      const msg = JSON.parse(e.message)\r\n      this.$notify({\r\n        title: msg.message,\r\n        type: 'error',\r\n        duration: 2500\r\n      })\r\n      this.loading = false\r\n    }\r\n  }\r\n}\r\n",null]}